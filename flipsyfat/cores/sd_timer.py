from migen import *
from misoc.interconnect.csr import *


class SDTimer(Module, AutoCSR):
    """Add-on core for timestamping events generated by the SDEmulator
       """
    def __init__(self, sd_linklayer, width=32):
        # Raw counter, not synchronized
        self._now = CSRStatus(width)
        self.sync += self._now.status.eq(self._now.status + 1)

        # Capture register
        self._capture = CSR()
        self._capture_ts = CSRStatus(width)
        self._posedge(self._capture_ts, self._capture.re)

        # SD emulator events
        self._read_ts = CSRStatus(width)
        self._write_ts = CSRStatus(width)
        self._done_ts = CSRStatus(width)
        self._posedge(self._read_ts, sd_linklayer.block_read_act)
        self._posedge(self._write_ts, sd_linklayer.block_write_act)
        self._posedge(self._done_ts, sd_linklayer.data_out_done)

    def _posedge(self, reg, trigger):
        trigger_prev = Signal()
        self.sync += [
            trigger_prev.eq(trigger),
            If(trigger & ~trigger_prev, reg.status.eq(self._now.status))
        ]
